$date
	Sun Jun  8 22:58:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module top_tb $end
$var wire 7 ! result [6:0] $end
$var wire 1 " flag_gt_zero $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 1 " flag_gt_zero $end
$var wire 1 $ reset $end
$var wire 7 % result [6:0] $end
$var wire 7 & R_result [6:0] $end
$var wire 1 ' R_ZF $end
$var wire 1 ( OP $end
$var wire 7 ) B [6:0] $end
$var wire 7 * A [6:0] $end
$scope module alu_inst $end
$var wire 1 ' ZF $end
$var wire 7 + R_SHR [6:0] $end
$var wire 7 , R_NOT [6:0] $end
$var wire 1 ( OP $end
$var wire 7 - B [6:0] $end
$var wire 7 . A [6:0] $end
$var reg 7 / result [6:0] $end
$scope module NOT1 $end
$var wire 7 0 result [6:0] $end
$var wire 7 1 A [6:0] $end
$upscope $end
$scope module SHR1 $end
$var wire 3 2 shift [2:0] $end
$var wire 7 3 in [6:0] $end
$var reg 7 4 out [6:0] $end
$upscope $end
$upscope $end
$scope module controller_inst $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var parameter 3 5 FINISH $end
$var parameter 3 6 START $end
$var parameter 3 7 TEST_NOT $end
$var parameter 3 8 TEST_SHR $end
$var reg 7 9 A [6:0] $end
$var reg 7 : B [6:0] $end
$var reg 1 ( OP $end
$var reg 3 ; nstate [2:0] $end
$var reg 3 < pstate [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 8
b1 7
b0 6
b11 5
$end
#0
$dumpvars
b0 <
b1 ;
b0 :
b0 9
b0 4
b0 3
b0 2
b0 1
b1111111 0
b1111111 /
b0 .
b0 -
b1111111 ,
b0 +
b0 *
b0 )
0(
0'
b1111111 &
b1111111 %
1$
0#
1"
b1111111 !
$end
#5
1#
#10
0#
0$
#15
b101010 !
b101010 %
b101010 &
b101010 /
b101010 ,
b101010 0
b1010101 +
b1010101 4
b10 ;
b1010101 *
b1010101 .
b1010101 1
b1010101 3
b1010101 9
b1 <
1#
#20
0#
#25
b1100 !
b1100 %
b1100 &
b1100 /
b11 2
b11001 ,
b11001 0
b1100 +
b1100 4
b11 ;
1(
b11 )
b11 -
b11 :
b1100110 *
b1100110 .
b1100110 1
b1100110 3
b1100110 9
b10 <
1#
#30
0#
#35
b1111111 !
b1111111 %
b1111111 &
b1111111 /
b0 2
b1111111 ,
b1111111 0
b0 +
b0 4
b0 ;
0(
b0 )
b0 -
b0 :
b0 *
b0 .
b0 1
b0 3
b0 9
b11 <
1#
#40
0#
#45
b1 ;
b0 <
1#
#50
0#
#55
b101010 !
b101010 %
b101010 &
b101010 /
b101010 ,
b101010 0
b1010101 +
b1010101 4
b10 ;
b1010101 *
b1010101 .
b1010101 1
b1010101 3
b1010101 9
b1 <
1#
#60
0#
#65
b1100 !
b1100 %
b1100 &
b1100 /
b11 2
b11001 ,
b11001 0
b1100 +
b1100 4
b11 ;
1(
b11 )
b11 -
b11 :
b1100110 *
b1100110 .
b1100110 1
b1100110 3
b1100110 9
b10 <
1#
#70
0#
#75
b1111111 !
b1111111 %
b1111111 &
b1111111 /
b0 2
b1111111 ,
b1111111 0
b0 +
b0 4
b0 ;
0(
b0 )
b0 -
b0 :
b0 *
b0 .
b0 1
b0 3
b0 9
b11 <
1#
#80
0#
#85
b1 ;
b0 <
1#
#90
0#
#95
b101010 !
b101010 %
b101010 &
b101010 /
b101010 ,
b101010 0
b1010101 +
b1010101 4
b10 ;
b1010101 *
b1010101 .
b1010101 1
b1010101 3
b1010101 9
b1 <
1#
#100
0#
#105
b1100 !
b1100 %
b1100 &
b1100 /
b11 2
b11001 ,
b11001 0
b1100 +
b1100 4
b11 ;
1(
b11 )
b11 -
b11 :
b1100110 *
b1100110 .
b1100110 1
b1100110 3
b1100110 9
b10 <
1#
#110
0#
